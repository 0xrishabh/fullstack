{"ast":null,"code":"var _jsxFileName = \"/home/cypher/Desktop/open-source/fullstack/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\" \", props.text, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\n\nconst stats = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.text, \" \", props.count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => props.ftype(props.counter + 1),\n    children: [\" \", props.text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Button;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      ftype: setGood,\n      counter: good,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      ftype: setNeutral,\n      counter: neutral,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      ftype: setBad,\n      counter: bad,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"statisctics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/cypher/Desktop/open-source/fullstack/part1/unicafe/src/App.js"],"names":["React","useState","Header","props","text","stats","count","Button","ftype","counter","App","good","setGood","neutral","setNeutral","bad","setBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,sBACE;AAAA,oBAAMA,KAAK,CAACC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;KAAMF,M;;AAKN,MAAMG,KAAK,GAAIF,KAAD,IAAW;AACvB,sBACE;AAAA,eACGA,KAAK,CAACC,IADT,OACgBD,KAAK,CAACG,KADtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;AAOA,MAAMC,MAAM,GAAIJ,KAAD,IAAW;AACxB,sBACE;AAAQ,IAAA,OAAO,EAAE,MAAMA,KAAK,CAACK,KAAN,CAAYL,KAAK,CAACM,OAAN,GAAc,CAA1B,CAAvB;AAAA,oBAAwDN,KAAK,CAACC,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;MAAMG,M;;AAKN,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACc,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEW,OAAf;AAAwB,MAAA,OAAO,EAAED,IAAjC;AAAuC,MAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEG,UAAf;AAA2B,MAAA,OAAO,EAAED,OAApC;AAA6C,MAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEG,MAAf;AAAuB,MAAA,OAAO,EAAED,GAAhC;AAAqC,MAAA,IAAI,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjBD;;GAAML,G;;MAAAA,G;AAmBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Header = (props) => {\n  return (\n    <h1> {props.text} </h1>\n  )\n}\nconst stats = (props) => {\n  return (\n    <div>\n      {props.text} {props.count}\n    </div>\n  )\n}\nconst Button = (props) => {\n  return (\n    <button onClick={() => props.ftype(props.counter+1)} > {props.text}</button>\n  )\n}\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div> \n      <Header text=\"give feedback\"/>\n      <Button ftype={setGood} counter={good} text=\"good\"/>\n      <Button ftype={setNeutral} counter={neutral} text=\"neutral\"/>\n      <Button ftype={setBad} counter={bad} text=\"bad\"/>\n      <Header text=\"statisctics\"/>\n\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}