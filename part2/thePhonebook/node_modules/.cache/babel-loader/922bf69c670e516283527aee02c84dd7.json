{"ast":null,"code":"var _jsxFileName = \"/home/cypher/Desktop/open-source/fullstack/part2/thePhonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Filter = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"filter shown with: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: event => {\n        setSearchQuery(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Filter;\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456'\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523'\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345'\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122'\n  }]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newQuery, setSearchQuery] = useState('');\n\n  const addName = event => {\n    event.preventDefault();\n    let newObj = {\n      name: newName,\n      number: newNumber\n    };\n    let allNames = persons.map(object => object.name);\n\n    if (allNames.indexOf(newName) !== -1) {\n      alert(`${newName} is already added to phonebook.`);\n      return;\n    }\n\n    setPersons([...persons].concat([newObj]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addName,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => {\n            setNewName(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 78\n        }, this), \"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => {\n            setNewNumber(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), persons.map((person, key) => {\n      return person.name.indexOf(newQuery) !== -1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [person.name, \" \", person.number]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"hovB4gu69C/9OySrcvx/Xa24oDE=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Filter\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/cypher/Desktop/open-source/fullstack/part2/thePhonebook/src/App.js"],"names":["React","useState","Filter","event","setSearchQuery","target","value","App","persons","setPersons","name","number","newName","setNewName","newNumber","setNewNumber","newQuery","addName","preventDefault","newObj","allNames","map","object","indexOf","alert","concat","person","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Filter = () => {\n  return (\n    <div>\n      filter shown with: <input onChange={(event)=>{setSearchQuery(event.target.value)}}/>\n    </div>\n  )\n}\nconst App = () => {\n  const [ persons, setPersons ] = useState([\n    { name: 'Arto Hellas', number: '040-123456' },\n    { name: 'Ada Lovelace', number: '39-44-5323523' },\n    { name: 'Dan Abramov', number: '12-43-234345' },\n    { name: 'Mary Poppendieck', number: '39-23-6423122' }\n  ]) \n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newQuery, setSearchQuery ] = useState('')\n  const addName = (event) => {\n    event.preventDefault()\n    \n    let newObj = {\n      name: newName, \n      number: newNumber\n    }\n\n    let allNames = persons.map((object)=>object.name)\n    if(allNames.indexOf(newName) !== -1){\n      alert(`${newName} is already added to phonebook.`)\n      return \n    }\n\n    setPersons([...persons].concat([newObj]));\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter>\n      \n      </Filter>\n      <form onSubmit={addName}>\n        <div>\n          name: <input onChange={(event)=>{setNewName(event.target.value)}}/><br/>\n          number: <input onChange={(event)=>{setNewNumber(event.target.value)}}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {\n        persons.map((person,key) => {\n          return person.name.indexOf(newQuery) !== -1? \n            <p key={key}>{person.name} {person.number}</p>:\n            <></>\n        })\n      }\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}