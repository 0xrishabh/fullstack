{"ast":null,"code":"var _jsxFileName = \"/home/cypher/Desktop/open-source/fullstack/part2/courseinfo/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.course\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\n\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.part, \" \", props.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Part;\n\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Part, {\n      part: props.parts[0].name,\n      exercises: props.parts[0].exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: props.parts[1].name,\n      exercises: props.parts[1].exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Part, {\n      part: props.parts[2].name,\n      exercises: props.parts[2].exercises\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Content;\n\nconst Total = props => {\n  return /*#__PURE__*/_jsxDEV(\"b\", {\n    children: [\" total of \", props.parts.reduce((total, part) => total + part.exercises, 0), \" exercises\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Total;\n\nconst Course = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: props.course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: props.course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: props.course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Course;\n\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return courses.map(each => /*#__PURE__*/_jsxDEV(Course, {\n    course: each\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 25\n  }, this));\n};\n/*\n\n  return (\n    <div>\n      <Header course={course.name}/>\n      <Content parts={course.parts}/>\n      <Total parts={course.parts}/>\n    </div>\n  )\n}\n*/\n\n\n_c6 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"Course\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"sources":["/home/cypher/Desktop/open-source/fullstack/part2/courseinfo/src/App.js"],"names":["React","Header","props","course","Part","part","exercises","Content","parts","name","Total","reduce","total","Course","App","courses","id","map","each"],"mappings":"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","sourcesContent":["import React from 'react'\n\n\nconst Header = (props) => {\n  return (\n    <h1>{props.course}</h1>\n  )\n}\n\nconst Part = (props) => {\n  return (\n    <p>\n      {props.part} {props.exercises}\n    </p>\n  )\n}\n\nconst Content = (props) => {\n  return (\n    <div>\n      <Part part={props.parts[0].name} exercises={props.parts[0].exercises}/>\n      <Part part={props.parts[1].name} exercises={props.parts[1].exercises}/>\n      <Part part={props.parts[2].name} exercises={props.parts[2].exercises}/>\n    </div>\n  )\n}\n\nconst Total = (props) => {\n  return (\n    <b> total of {props.parts.reduce((total,part)=>total+part.exercises,0)} exercises</b>\n  )\n}\n\nconst Course = (props) => {\n  return (\n    <div>\n      <Header course={props.course.name}/>\n      <Content parts={props.course.parts}/>\n      <Total parts={props.course.parts}/>\n    </div>\n  )\n}\n\nconst App = () => {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    }, \n    {\n      name: 'Node.js',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  return (\n    courses.map(each => <Course course={each}/>)\n    \n  )\n}\n/*\n\n  return (\n    <div>\n      <Header course={course.name}/>\n      <Content parts={course.parts}/>\n      <Total parts={course.parts}/>\n    </div>\n  )\n}\n*/\nexport default App"]},"metadata":{},"sourceType":"module"}